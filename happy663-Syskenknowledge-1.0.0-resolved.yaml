openapi: 3.0.0
info:
  title: SyskenKnowledge
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://virtserver.swaggerhub.com/happy663/Syskenknowledge/1.0.0
    description: SwaggerHub API Auto Mocking
tags:
  - name: thread
    description: Secured Admin-only calls
  - name: res
    description: Operations available to regular developers
paths:
  /thread:
    get:
      tags:
        - thread
      summary: スレッドの情報を受け取るAPI
      description: スレッドの情報を受け取るAPI
      parameters: []
      responses:
        200:
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetThread"
    post:
      tags:
        - thread
      summary: スレッドを立てるAPI
      description: ユーザからスレッド名を受け取ってスレッドを立てる
      operationId: addInventory
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateThread"
      responses:
        201:
          description: Inventory item to add
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateThreadResponse"
        400:
          description: invalid input, object invalid
  /thread/{id}:
    delete:
      tags:
        - thread
      summary: スレッドを削除するAPI
      description: ユーザ自身が作成したスレッドを削除する
      parameters:
        - name: id
          in: path
          description: 削除対象のスレッド
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Delete"
      responses:
        201:
          description: Inventory item to add
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDelete"
        400:
          description:
            invalid input, object invalid
  /thread/res:
    get:
      tags:
        - res
      summary: レスの情報を受け取るAPI
      description: レスの情報を受け取るAPI
      parameters: []
      responses:
        200:
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLess"
              # example:
    post:
      tags:
        - res
      summary: レスを送るAPI
      description: ユーザが入力した内容をスレッドに投稿
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostLess"
      responses:
        201:
          description: Inventory item to add
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateThreadResponse"
        400:
          description: invalid input, object invalid


  /user:
    post:
      tags: 
        - users
      summary: Create a new User
      description: Create a new User
      parameters: []
      requestBody: # リクエストボディ
        description: user to create
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/User'
            example:
              id: 3
              name: Richard Roe
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRes"
  /users/{userId}:
    get:
      tags:
        - users
      summary: Get user by ID.
      description: Returns a single User model
      parameters: # リクエストパラメータ
        - name: userId
          in: path # パラメータをパス内に含める
          description: user id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single User model
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  name: kensuke
                  password: hogehoge
components:
  schemas:
    CreateThread:
      required:
        - date
        - ipAddress
        - sentence
        - title
      type: object
      properties:
        title:
          type: string
          example: 今日の朝ごはんについて
        sentence:
          type: string
          example: 今日の朝ごはんの内容が思い出せない助けて
        ipAddress:
          type: string
          format: ipv4
          example: 122.135.235.47
        macAddress:
          type: string
          example: "#EAJOUJASD"
        date:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
    CreateThreadResponse:
      required:
        - date
        - id
      type: object
      properties:
        id:
          type: string
          example: ""
        date:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
    PostLess:
      required:
        - date
        - ipAddress
        - sentence
      type: object
      properties:
        sentence:
          type: string
          example: まずお昼ご飯が何か思い出そ
        ipAddress:
          type: string
          format: ipv4
          example: 122.135.235.47
        macAddress:
          type: string
          example: "#EAJOUJASD"
        date:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
    GetLess:
      required:
        - date
        - id
        - sentence
      type: object
      properties:
        sentence:
          type: string
          example: まずお昼ご飯が何か思い出そ
        id:
          type: string
          example: 1
        date:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
    InventoryItem:
      required:
        - id
        - manufacturer
        - name
        - releaseDate
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Widget Adapter
        releaseDate:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        manufacturer:
          $ref: "#/components/schemas/Manufacturer"
    Manufacturer:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: ACME Corporation
        homePage:
          type: string
          format: url
          example: https://www.acme-corp.com
        phone:
          type: string
          example: 408-867-5309
    Delete:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          example: ""
    ResponseDelete:
      required:
        - scssec
      type: object
      properties:
        scssec:
          type: string
          example: 成功
    GetThread:
      required:
        - date
        - id
        - sentence
        - title
      type: object
      properties:
        title:
          type: string
          example: 今日の朝ごはんについて
        id:
          type: string
          example: ""
        sentence:
          type: string
          example: 今日の朝ごはんの内容が思い出せない助けて
        date:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
    User:
      required:
        - name
        - password
      type: object
      properties:
        name:
          type: string
          example: ""
        password:
          type: string
          example: ""
    UserRes:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          example: "sakjfkljdsakj"